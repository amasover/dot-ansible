---
- hosts: 127.0.0.1
  connection: local
  vars:
    - local_user: "han"
    - github_user: "patrick-motard"
    - new_install: true
    - background_images_dir: "/home/{{local_user}}/Dropbox/photos/backgrounds/2017/selected"
    - dot_ansible_path: "/home/{{local_user}}/code/dot-ansible"
    # - desktop_background_schedule: "*/1 * * * *"
    # install packages from pacman_pkgs
    - optional_pacman_packages: true
    # install packages from aur_pkgs
    - optional_aur_packages: true
  roles:
    - pacman
    - zsh
    - desktop-background
    - lock-screen
  tasks:
<<<<<<< HEAD
=======
    #- import_tasks: zsh.yml
>>>>>>> df30f2ee60604210d3d0c3e47d0e7b7c4a18434d
    # - name: ckb (corsair keyboard)
    #   block:
    #     # ckb is the linux daemon for corsair keyboards
    #     - name: See if ckb is installed
    #       shell: "pacman -Qemq | grep -c ckb-next"
    #       register: ckb
    #     - name: ckb-next
    #       when: ckb.stdout == "1"
    #       systemd:
    #         name: ckb-next-daemon
    #         state: started
    #         enabled: yes
    - name: Docker
      become: true
      block:
        - name: Create docker usergroup
          group:
            name: docker
            state: present
        - name: Add user to docker group
          # so that we don't have to type sudo every time we use docker
          user:
            name: "{{local_user}}"
            groups: docker
            append: yes
        - name: Start/Enable docker service
          systemd:
            name: docker
            state: started
            enabled: yes
    - name: Python packages
      become: false
      pip:
        name: 
          - pip
          - awscli
          - polybar-reload
        extra_args: --user
    - name: Install Vundle
      become: false
      git:
        repo: "https://github.com/VundleVim/Vundle.vim.git"
        dest: "/home/{{local_user}}/.vim/bundle/Vundle.vim"
    - name: See if yadm has a repo cloned.
      stat:
        path: "/home/{{local_user}}/.yadm/repo.git"
      register: yadm_repo
    - name: Clone dotfiles repo with yadm.
      become: false
      shell: "yadm clone https://github.com/{{github_user}}/dotfiles.git"
      ignore_errors: yes
    - name: Set yadm remote to .ssh
      become: false
      shell: "yadm remote set-url origin git@github.com:{{github_user}}/dotfiles.git"
      when: yadm_repo.stat.exists == false
    - name: Set dot-ansible remote to .ssh
      become: false
      shell: "git remote set-url origin git@github.com:patrick-motard/dot-ansible.git"
      args:
        chdir: "/home/{{local_user}}/code/dot-ansible"
      # TODO: installing nodejs through nvm isn't necessary, it's done automatically once
      # you log in. The second task to install packages should be run only if node is installed.
      # (will run on subsequent calls)
      #    - name: NodeJS 
      #      become: false
      #      block:
      #        - name: install Node with NVM
      #          shell: |
      #            echo $USER
      #            . /home/{{local_user}}/.nvm/nvm.sh
      #            node_version=$(</home/{{local_user}}/.nvmrc)
      #            nvm install $node_version
      #        - name: install npm packages
      #          npm:
      #            name: "{{item}}"
      #            global: yes
      #          with_items:
      #            - tern
    - name: See if spacemacs is installed.
      stat:
        path: "/home/{{local_user}}/.emacs.d"
      register: spacemacs_repo
    - name: Remove ~/.emacs.d
      become: false
      file:
        path: "/home/{{local_user}}/.emacs.d"
        state: absent
      when: spacemacs_repo.stat.exists == false
    - name: Install Spacemacs
      become: false
      git:
        repo: "https://github.com/syl20bnr/spacemacs"
        dest: "/home/{{local_user}}/.emacs.d"
        version: develop
    #TODO: This needs gopath to be set correctly before it can be run
    - name: Install go packages
      become: false
      shell: "go get -u -v {{item}}"
      ignore_errors: true
      with_items:
        # needed for spacemacs go layer
        # https://github.com/syl20bnr/spacemacs/tree/master/layers/%2Blang/go
        - "github.com/nsf/gocode"
        - "github.com/rogpeppe/godef"
        - "golang.org/x/tools/cmd/guru"
        - "golang.org/x/tools/cmd/gorename"
        - "golang.org/x/tools/cmd/goimports"
        # needed for guru -> import/add dependencies (spacemacs go layer)
        - "github.com/uudashr/gopkgs/cmd/gopkgs"
        # needed for dotfiles
        - "github.com/itchyny/volume-go/cmd/volume"
        - "github.com/patrick-motard/dot"
    # - name: Update all existing golang packages
    #   become: false
    #   shell: go get -u all

